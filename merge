def merge(arr1, arr2):
    m, n = len(arr1), len(arr2)
    
    # Function to calculate the next gap
    def next_gap(gap):
        if gap <= 1:
            return 0
        return (gap + 1) // 2

    gap = next_gap(m + n)
    
    while gap > 0:
        i = 0
        
        # Comparing elements in arr1
        while i + gap < m:
            if arr1[i] > arr1[i + gap]:
                arr1[i], arr1[i + gap] = arr1[i + gap], arr1[i]
            i += 1

        # Comparing elements between arr1 and arr2
        j = gap - m if gap > m else 0
        while i < m and j < n:
            if arr1[i] > arr2[j]:
                arr1[i], arr2[j] = arr2[j], arr1[i]
            i += 1
            j += 1
        
        # Comparing elements in arr2
        if j < n:
            j = 0
            while j + gap < n:
                if arr2[j] > arr2[j + gap]:
                    arr2[j], arr2[j + gap] = arr2[j + gap], arr2[j]
                j += 1

        gap = next_gap(gap)

# Example usage
arr1 = [1, 3, 5, 7]
arr2 = [2, 4, 6, 8]

merge(arr1, arr2)

print("arr1 after merge:", arr1)
print("arr2 after merge:", arr2)
